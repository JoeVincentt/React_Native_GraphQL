type User {
  userId: ID
  username: String!
  password: String!
  email: String!
  joinDate: String
}

type Chat {
  chatId: String
  participant: [String]
  createdAt: String
  updatedAt: String
}

type Message {
  messageId: String
  senderId: String!
  recipientId: String!
  content: String!
  chatId: String!
  sentAt: String
}

type Subscription {
  messageAdded(chatId: String!): Message
}

type Query {
  getCurrentUser: User
  getChatMessage(chatId: String!): [Message]
  getChat(userId: String!): [Chat]
}

type Token {
  token: String!
}

type Mutation {
  # User Mutations
  signinUser(email: String!, password: String!): Token

  signupUser(
    username: String!
    email: String!
    password: String!
    passwordConfirmation: String!
  ): Token

  #Chat Mutation
  createChat(user1Id: String!, user2Id: String!): Chat
  createMessage(
    senderId: String!
    recipientId: String!
    content: String!
    chatId: String!
  ): Message
}
